+---------------------------------------------------------------------------------------+
|	Tetris Game; C++	designed and implemented by Anyi Rao			|
+---------------------------------------------------------------------------------------+


1. I began with shape management. I created a four-dimensional array of 7x4x4x4 to store 
the 7 possible shapes, each with 4 possible rotations, on a 4x4 grid which is 
essentially the bounding box for each shape.I created a class TetrisShape for this.

2. Then, I dealt with piece movement and edge collisions. To make the pieces move I 
updated them and moved them down one row each time a fixed time interval expires. In real 
Tetris, this interval is based on what level of the game you are on, and that is exactly 
what we do here. 

So I've introduced a Level variable. And I made a place to store the contents of the 
bucket (game board), so when a piece reaches the bottom it won't vanish.

3. Collision detection was the next thing I need to handle with. 
I disallowed rotation if it collided with another piece on the board. In reality the 
piece might get shifted a little bit but this is for all intents and purposes an unusual 
edge case scenario, and real Tetris also disallows the majority of such rotations. Next 
up I detected when lines have been filled, removed them, kept and displayed score, and 
handled the situation where the grid gets full. Finally, scores, level, line clearing, 
grid moving when line is cleared, and bonus scores for multiple lines added.

Author: Anyi Rao
Student ID: 141180092
